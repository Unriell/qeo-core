# The target architecture
TARG_ARCH            := MIPS

# The target operating system
TARG_OS              := LINUX

# The compiler family
COMPILER             := GNU

# The root directory of your toolchain
TOOLCHAIN_PREFIX := thirdparty/fsf/gcc/mips-linux-4.4.2-1-uclibc
TOOLCHAIN_DIR := $(projectdir/)$(TOOLCHAIN_PREFIX)

# This environment can be used on i686_Linux hosts
SUPPORTED_HOSTTYPES  := i686_Linux
# The path to all toolchain commands
i686_Linux_TOOLCHAIN := $(TOOLCHAIN_DIR)/usr/bin/mips-linux-uclibc-
x86_64_Linux_TOOLCHAIN := $(TOOLCHAIN_DIR)/usr/bin/mips-linux-uclibc-

# Lowercase definition of the architecture, as needed by configure, ... 
CONFIGURATION_NAME   := mips-linux-uclibc

# The endianness of the target architecture
E_ENDIAN             := BIG

# The size of a long on the target architecture
E_SIZEOF_LONG        := 4

# Flags passed to the compiler
#
# In case of debugging, we do not use garbage collection of sections and we do
# not enable code size optimization of code. -g is always passed, even if we
# are not compiling with DEBUG. The debug info is stripped off when installing
# the components. We did not see any notable degradation of code when -g was
# passed along with -Os. 
ifeq ($($(COMPONENT)_DEBUG),1)
  E_CFLAGS           := -g -O0 -fPIC --sysroot=$(TOOLCHAIN_DIR)
  E_CCFLAGS          := $(E_CFLAGS)
  E_LFLAGS           := --sysroot=$(TOOLCHAIN_DIR)
else
  E_CFLAGS           := -g -Os -fdata-sections -ffunction-sections -fPIC --sysroot=$(TOOLCHAIN_DIR)
  E_CCFLAGS          := $(E_CFLAGS)
  E_LFLAGS           := -Wl,--gc-sections --sysroot=$(TOOLCHAIN_DIR)
endif

rt_LIBS := -lrt

# The gdb server used for this environment
GDBSERVER            := $(TOOLCHAIN_DIR)/usr/mips-linux-uclibc/target_utils/gdbserver

# Extra libraries needed for gdbserver in this environment
GDBSERVER_LIBS       := $(TOOLCHAIN_DIR)/lib/libthread_db.so@lib/libthread_db.so:644 s:libthread_db.so@lib/libthread_db.so.1


E_KERNEL_DIR                := $(projectdir)/../vobs/linux/kernel/linux
E_KERNEL_BUILD_EXTRA_PARAMS := CROSS_COMPILE=$($(HOSTTYPE)_TOOLCHAIN)

bindir=usr/bin
libdir=usr/lib
datadir=usr/share
pkgconfigdir=$(libdir)/pkgconfig
incdir=usr/include
sysconfdir=etc
rgcdir=$(libdir)/rgcplugin
viewmapdir=$(bindir)/rgcviews
clifwmapdir=$(datadir)/clifw/lua/definitions
luamoddir=$(datadir)/lua
lualibdir=$(libdir)/lua
