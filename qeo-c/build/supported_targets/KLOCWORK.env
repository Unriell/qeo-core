# The target architecture (HOST is a pseudo architecture)
TARG_ARCH = KLOCWORK

# The target operating system
TARG_OS = LINUX

# The compiler family
COMPILER = GNU

# The path to all toolchain commands
i686_Linux_TOOLCHAIN := $(projectdir/)build/kloccc.sh # The space matters!
x86_64_Linux_TOOLCHAIN := $(projectdir/)build/kloccc.sh # The space matters!

# Lowercase definition of the architecture, as needed by configure, ... 
CONFIGURATION_NAME   := mips-linux-uclibc

# Flags passed to the compiler
#
# In case of debugging, we do not use garbage collection of sections and we do
# not enable code size optimization of code. -g is always passed, even if we
# are not compiling with DEBUG. The debug info is stripped off when installing
# the components. We did not see any notable degradation of code when -g was
# passed along with -Os. 
ifeq ($($(COMPONENT)_DEBUG),1)
  E_CFLAGS  := -g -O0
  E_CCFLAGS := $(E_CFLAGS)
  E_LFLAGS  :=
else
  E_CFLAGS  := -g -Os -fdata-sections -ffunction-sections
  E_CCFLAGS := $(E_CFLAGS)
  E_LFLAGS  := -Wl,--gc-sections
endif


ifneq ($(JNI),)
#compile for jni
E_CFLAGS += -DJNI
ifeq ($(JAVA_HOME),)
#JAVA_HOME not set. Determine this based on the location of javah
JAVA_HOME:=$(shell readlink -f `which javah` | sed "s|/bin/javah||")
endif
E_CFLAGS += -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux
endif

E_ENDIAN=LITTLE
E_SIZEOF_LONG=4
E_STD_LIBS  := -lpthread -lc

ifeq ($($(COMPONENT)_COVERAGE),1)
  E_CFLAGS   := $(filter-out -O%,$(E_CFLAGS))  -O0 -fprofile-arcs -ftest-coverage -D$(subst -,_,$(COMPONENT))_COVERAGE
  E_CCFLAGS  := $(filter-out -O%,$(E_CCFLAGS)) -O0 -fprofile-arcs -ftest-coverage -D$(subst -,_,$(COMPONENT))_COVERAGE
  E_STD_LIBS += -lgcov 
endif

ifeq ($(HOSTMACHINE), x86_64)
# Extra cflags that need to be passed to the compiler when we are compiling a shared library
E_SHARED_LIB_CFLAGS = -fPIC

# Extra part that has to be added to the output prefix when we compile shared libraries
E_SHARED_DIR_INFIX  = /shared
endif

rt_LIBS := -lrt

GDBSERVER = $(WORKSPACE)/../../cm4/tools/GNU/tools/arch/i386/Linux/bin/gdbserver
GDB = $(WORKSPACE)/../../cm4/tools/GNU/tools/arch/i386/Linux/bin/gdb
