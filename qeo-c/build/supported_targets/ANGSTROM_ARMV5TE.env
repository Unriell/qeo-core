# The target architecture
TARG_ARCH            := ARM

# The target operating system
TARG_OS              := LINUX

# The compiler family
COMPILER             := GNU

# The root directory of your toolchain
TOOLCHAIN_DIR := /home/users/cpeqeo/tools/angstrom-i686-linux-armv5te-linux-gnueabi

# This environment can be used on i686_Linux hosts
SUPPORTED_HOSTTYPES  := i686_Linux
# The path to all toolchain commands
i686_Linux_TOOLCHAIN := $(TOOLCHAIN_DIR)/bin/arm-angstrom-linux-gnueabi-
x86_64_Linux_TOOLCHAIN := $(TOOLCHAIN_DIR)/bin/arm-angstrom-linux-gnueabi-

# Lowercase definition of the architecture, as needed by configure, ... 
CONFIGURATION_NAME   := arm-angstrom-linux-gnueabi

# The endianness of the target architecture
E_ENDIAN             := LITTLE

# The size of a long on the target architecture
E_SIZEOF_LONG        := 4

# Flags passed to the compiler
#
# In case of debugging, we do not use garbage collection of sections and we do
# not enable code size optimization of code. -g is always passed, even if we
# are not compiling with DEBUG. The debug info is stripped off when installing
# the components. We did not see any notable degradation of code when -g was
# passed along with -Os. 
ifeq ($($(COMPONENT)_DEBUG),1)
  E_CFLAGS           := -g -O0
  E_CCFLAGS          := $(E_CFLAGS)
  E_LFLAGS           :=
else
  E_CFLAGS           := -g -Os -fdata-sections -ffunction-sections
  E_CCFLAGS          := $(E_CFLAGS)
  E_LFLAGS           := -Wl,--gc-sections
endif

ifneq ($(JNI),)
#compile for jni
E_CFLAGS += -DJNI
ifeq ($(JAVA_HOME),)
#JAVA_HOME not set. Determine this based on the location of javah
JAVA_HOME:=$(shell readlink -f `which javah` | sed "s|/bin/javah||")
endif
E_CFLAGS += -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux
endif

rt_LIBS := -lrt

# The gdb server used for this environment
#GDBSERVER            := $(TOOLCHAIN_DIR)/arm-linux-gnueabihf/debug-root/usr/bin/gdbserver

# Extra libraries needed for gdbserver in this environment
#GDBSERVER_LIBS       := $(TOOLCHAIN_DIR)/...


#E_KERNEL_DIR                := ...
#E_KERNEL_BUILD_EXTRA_PARAMS := CROSS_COMPILE=$($(HOSTTYPE)_TOOLCHAIN)

prefix=usr
bindir=$(prefix)/bin
libdir=$(prefix)/lib
datadir=$(prefix)/share
pkgconfigdir=$(prefix)/lib/pkgconfig
incdir=$(prefix)/include
sysconfdir=etc

