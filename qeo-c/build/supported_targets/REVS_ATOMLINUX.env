# The target architecture
TARG_ARCH              := ATOM

# The target operating system
TARG_OS                := LINUX

# The compiler family
COMPILER               := GNU

# The root directory of your toolchain
TOOLCHAIN_PREFIX := thirdparty/fsf/gcc/i686-linux-4.5.1-glibc
TOOLCHAIN_DIR := $(projectdir/)$(TOOLCHAIN_PREFIX)
GLIBC_REPLACE_DIR      := $(projectdir/)thirdparty/fsf/gcc/glibcReplacement
GLIBC_REPLACE_WRAP_DIR := $(projectdir/)thirdparty/fsf/gcc/glibcReplacementWrapper

# This environment can be used on i686_Linux hosts
SUPPORTED_HOSTTYPES    := i686_Linux
# The path to all toolchain commands

# Check the site to use the up to date compilator for match on glibc 2.5.1
ifeq ($(SITE)$(OSV),EDEGEMRHEL4)
 i686_Linux_TOOLCHAIN  := $(GLIBC_REPLACE_DIR)/RunTime/elf/ld-linux.so.2 --library-path $(GLIBC_REPLACE_DIR)/RunTime/:/lib:/usr/lib $(TOOLCHAIN_DIR)/bin/i686-cm-linux-
else
 i686_Linux_TOOLCHAIN  := $(TOOLCHAIN_DIR)/bin/i686-cm-linux-
endif

x86_64_Linux_TOOLCHAIN := $(TOOLCHAIN_DIR)/bin/i686-cm-linux-
 
# Lowercase definition of the architecture, as needed by configure, ... 
CONFIGURATION_NAME     := i686-cm-linux

# The endianness of the target architecture
E_ENDIAN               := LITTLE

# The size of a long on the target architecture
E_SIZEOF_LONG          := 4

# Flags passed to the compiler
#
# In case of debugging, we do not use garbage collection of sections and we do
# not enable code size optimization of code. -g is always passed, even if we
# are not compiling with DEBUG. The debug info is stripped off when installing
# the components. 

E_CC_REQUIRED_OPTIONS  := -Wl,-rpath-link,$(TOOLCHAIN_DIR)/target.orig/lib
E_CCC_REQUIRED_OPTIONS := -Wl,-rpath-link,$(TOOLCHAIN_DIR)/target.orig/lib

#Wrapped tool are only useful in Edegem
ifeq ($(SITE)$(OSV),EDEGEMRHEL4)
E_CC_REQUIRED_OPTIONS  += -B$(GLIBC_REPLACE_WRAP_DIR)
E_CCC_REQUIRED_OPTIONS += -B$(GLIBC_REPLACE_WRAP_DIR)
endif

E_CC_REQUIRED_OPTIONS  += -isystem $(TOOLCHAIN_DIR)/target.orig/usr/include --sysroot=$(TOOLCHAIN_DIR)/target.orig
E_CCC_REQUIRED_OPTIONS += -isystem $(TOOLCHAIN_DIR)/target.orig/usr/include --sysroot=$(TOOLCHAIN_DIR)/target.orig
 
ifeq ($($(COMPONENT)_DEBUG),1)
  E_CFLAGS           := -g -O0
  E_CCFLAGS          := $(E_CFLAGS) 
  E_LFLAGS           := 
else
  E_CFLAGS           := -O2
  E_CCFLAGS          := $(E_CFLAGS) 
  E_LFLAGS           := -Wl,--gc-sections
endif

rt_LIBS := -lrt

# The gdb server used for this environment
#GDBSERVER            := 

# Extra libraries needed for gdbserver in this environment
#GDBSERVER_LIBS       :=

prefix=usr

bindir=bin
libdir=lib
datadir=share
pkgconfigdir=lib/pkgconfig
incdir=include
sysconfdir=etc
rgcdir=$(libdir)/rgcplugin
viewmapdir=$(bindir)/rgcviews
clifwmapdir=$(datadir)/clifw/lua/definitions
luamoddir=$(datadir)/lua
lualibdir=$(libdir)/lua
